from os import path
from nltk.util import ngrams
from collections import Counter
import pickle


def op_list_generator(wd='/home/s_ariel/Documents'):
    for i in range(22):
        file_name = 'op' + str(i) + '.pickle'
        with open(path.join(wd, file_name), 'rb') as f_in:
            op_lists = pickle.load(f_in)
            for op in op_lists:
                yield op


def get_freq_ngrams(oplist, n, threshold):
    counter = Counter(ngrams(oplist, n))
    freq_gram = {k for k, v in counter.items() if v >= threshold}
    return freq_gram


def count_freq_ngrams(oplist, n, freq_set):
    counter = Counter(ngrams(oplist, n))
    freq_ngram_counter = {k: v for k, v in counter.items() if k in freq_set}
    return freq_ngram_counter


# first pass, find frequent 3-grams and 4-grams
freq_2g = set()
freq_3g = set()
freq_4g = set()

op_gen = op_list_generator()
j = 0
for op in op_gen:
    freq_2g.update(get_freq_ngrams(op, 2, 150))
    freq_3g.update(get_freq_ngrams(op, 3, 100))
    freq_4g.update(get_freq_ngrams(op, 4, 100))
    j += 1
    if j % 200 == 0:
        print(j)

with open('../data/opcode_freq_2gram.pickle', 'wb') as fout:
    pickle.dump(freq_2g, fout)

with open('../data/opcode_freq_3gram.pickle', 'wb') as fout:
    pickle.dump(freq_3g, fout)

with open('../data/opcode_freq_4gram.pickle', 'wb') as fout:
    pickle.dump(freq_4g, fout)


# second pass, extract n-grams, n = 1, 2, 3, 4
dict_1g = []
dict_2g = []
dict_3g = []
dict_4g = []

op_gen = op_list_generator()
j = 0
for op in op_gen:
    dict_1g.append(Counter(op))
    dict_2g.append(count_freq_ngrams(op, 2, freq_2g))
    dict_3g.append(count_freq_ngrams(op, 3, freq_3g))
    dict_4g.append(count_freq_ngrams(op, 4, freq_4g))
    j += 1
    if j % 200 == 0:
        print(j)

with open('../data/opcode_1gram.pickle', 'wb') as fout:
    pickle.dump(dict_1g, fout)

with open('../data/opcode_2gram.pickle', 'wb') as fout:
    pickle.dump(dict_2g, fout)

with open('../data/opcode_3gram.pickle', 'wb') as fout:
    pickle.dump(dict_3g, fout)

with open('../data/opcode_4gram.pickle', 'wb') as fout:
    pickle.dump(dict_4g, fout)
