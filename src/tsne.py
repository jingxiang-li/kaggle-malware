from os import path
from sklearn.manifold import TSNE
from sklearn.preprocessing import StandardScaler
import numpy as np
import pickle
import pylab


if path.isfile('../data/X_tsne.pickle'):
    with open('../data/X_tsne.pickle', 'rb') as f_in:
        X_tsne = pickle.load(f_in)
    with open('../data/y_all.pickle', 'rb') as f_in:
        y_all = np.array(pickle.load(f_in))
else:
    with open('../data/X_all.pickle', 'rb') as f_in:
        X_all = pickle.load(f_in)
    with open('../data/y_all.pickle', 'rb') as f_in:
        y_all = np.array(pickle.load(f_in))

    with open('../data/ftr_index.pickle', 'rb') as f_in:
        ftr_index = pickle.load(f_in)

    model = TSNE(n_components=2, verbose=1, init='pca',
                 random_state=11)
    X_tsne = model.fit_transform(X_all[:, ftr_index])

    with open('../data/X_tsne.pickle', 'wb') as f_out:
        pickle.dump(X_tsne, f_out)

np.savetxt('../tsne.csv', X_tsne)
np.savetxt('../y.csv', y_all)
pylab.scatter(X_tsne[:, 0], X_tsne[:, 1], c=y_all, s=50, alpha=0.5)
pylab.colorbar(ticks=range(8))
pylab.show()
